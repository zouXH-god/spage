name: Build & Release with xgo

on:
  push:
    tags: [xgo-v*]
  workflow_dispatch:

env:
  BIN_NAME: spage
  GO_ENTRYPOINT_SERVER: ./cmd/server
  BOT_TOKEN: ${{ secrets.LITEYUKIFLOW_TOKEN }}

permissions:
  contents: write
  packages: write

jobs:
  backend-xgo:
    name: Build with xgo
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
      tag: ${{ steps.version.outputs.tag }}
      nightly: ${{ steps.version.outputs.nightly }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set version/tag
        id: version
        run: |
          if [[ "${GITHUB_REF}" == refs/tags/v* ]]; then
            VERSION="${GITHUB_REF#refs/tags/}"
            TAG="${VERSION}"
            NIGHTLY="false"
          else
            VERSION="${GITHUB_SHA}"
            TAG="nightly"
            NIGHTLY="true"
          fi
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${TAG}" >> $GITHUB_OUTPUT
          echo "nightly=${NIGHTLY}" >> $GITHUB_OUTPUT

      - name: Setup xgo
        run: |
          docker pull crazymax/xgo:latest

      - name: Build with xgo (max platforms)
        run: |
          mkdir -p build
          docker run --rm -v $PWD:/source -w /source \
            crazymax/xgo:latest \
            --targets=linux/amd64,linux/arm64,linux/386,linux/arm-7,linux/ppc64le,linux/s390x,windows/amd64,windows/arm64,darwin/amd64,darwin/arm64 \
            --out=build \
            -ldflags="-X 'github.com/LiteyukiStudio/spage/config.CommitHash=${GITHUB_SHA}' \
                      -X 'github.com/LiteyukiStudio/spage/config.BuildTime=$(date -u +%Y-%m-%dT%H:%M:%SZ)' \
                      -X 'github.com/LiteyukiStudio/spage/config.Version=${{ steps.version.outputs.version }}'" \
            ${GO_ENTRYPOINT_SERVER}

      - name: Rename artifacts
        run: |
          mkdir -p dist
          for file in build/${{ env.BIN_NAME }}-*; do
            fname=$(basename "$file")
            mv "$file" "dist/${{ env.BIN_NAME }}-${fname#*-}"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-xgo
          path: dist/*
          retention-days: 30

  release:
    name: Publish GitHub Release
    runs-on: ubuntu-latest
    needs: backend-xgo
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.BIN_NAME }}-xgo
          path: dist/

      - name: Publish GitHub Release(tag & latest)
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ needs.backend-xgo.outputs.tag }}
          artifacts: dist/${{ env.BIN_NAME }}-*
          name: "Release ${{ needs.backend-xgo.outputs.tag }}"
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ env.BOT_TOKEN }}

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Edit Changelog
        run: |
          npx changelogithub || true
        env:
          GITHUB_TOKEN: ${{ env.BOT_TOKEN }}
